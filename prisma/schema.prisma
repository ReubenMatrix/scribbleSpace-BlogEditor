



// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  name      String?
  posts     Post[]
  authorId  String?   // Optional field for author relationship
  blogPosts BlogPost[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Post {
  id        String   @id @default(cuid())
  content   String
  imageUrl  String?  // S3 URL for the image
  imageKey  String?  // S3 object key for deletion
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  likes     Int      @default(0)
  dislikes  Int      @default(0)

  @@index([authorId])
}

model BlogPost {
  id        String      @id @default(cuid())
  title     String
  description String
  content   String     
  slug      String      @unique
  imageUrl  String?     // S3 URL for the blog thumbnail
  imageKey  String?     // S3 object key for deletion
  author    User        @relation(fields: [authorId], references: [id])
  authorId  String
  images    BlogImage[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  likes     Int         @default(0)
  dislikes  Int         @default(0)

  @@index([authorId])
  @@index([slug])
}

model BlogImage {
  id         String    @id @default(cuid())
  url        String
  key        String
  blogPost   BlogPost  @relation(fields: [blogPostId], references: [id])
  blogPostId String
  createdAt  DateTime  @default(now())
}
